
2.1 Dejando muy claro que erró

Daniel siempre fue muy exagerado. En su versión particular del juego de adivinanzas, 
cuando el usuario falla el intento de acertar, se muestran diez advertencias de que ha cometido un error en la pantalla.

Aquí está el código de Daniel:

<meta charset="UTF-8">
<script>

    function saltarLinea() {

        document.write("<br>");
    }

    function imprimir(frase) {

        document.write(frase);
        saltarLinea();
    }

    function sortearNumero() {

        return Math.round(Math.random() * 100);
    }   

    var numeroPensado = sortearNumero();

    var numeroLanzado = parseInt(prompt("Ingrese un número entre 0-10: "));

    if(numeroLanzado  == numeroPensado) {

        imprimir("Uau! Vos acertaste, pues yo pensé en el número " + numeroPensado);
    } else {

        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
        imprimir("¡Se acabó, vos erraste!");
    }
</script>

Ten en cuenta que las diez instrucciones que se muestran son las mismas.

Ayuda a Daniel marcando la opción que contiene otra forma más eficiente de mostrar el mensaje 
("¡Se acabó, vos erraste!") ¡10 veces! De esa manera, si quiere alterar el mensaje tendrá que cambiar el texto en un solo lugar.

opción b.

<meta charset="UTF-8">
<script>

    // funciones omitidas saltarLinea, imprimir, sortearNumero

    var numeroPensado = sortearNumero();

    var numeroLanzado = parseInt(prompt("Ingrese un número entre 0-10: "));

    if(numeroLanzado  == numeroPensado) {

        imprimir("Uau! Vos acertaste, pues yo pensé en el número " + numeroPensado);
    } else {
        var contador = 1;

        while(contador <= 10) {

               imprimir("¡Se acabó, vos erraste!");
               contador = contador +1;
        }
    }
</script>

¡Correcto! 
Recuerda que el while repetirá TODAS las instrucciones que estén dentro de su bloque { } 
cuando la condición pasada sea true. Observa que el while recibe en sus paréntesis () la expresión contador <= 10.
Cuando el navegador interpreta la línea del while preguntará: ¿El valor de la variable contador es menor que o igual a 10? 
Como variable contador recibe el valor 1 en su inicialización el resultado de la expresión contador <= 10 será true. 
Siendo así, el while estará autorizado para ejecutar la instrucción dentro de su bloque, 
en ese caso, la instrucción imprimir("¡Se acabó, vos erraste!"); y la instrucción contador = contador + 1.
¿Tiene sentido que él ejecute imprimir("¡Se acabó, vos erraste!")? 
Por supuesto, pero ¿recuerdas la razón por la que hacemos contador = contador + 1? 
Ten en cuenta que esta variable existe solo para un propósito: es la que romperá la sección de repetición while. 
Con cada repetición de la instrucción imprimir, necesitamos aumentarlo para saber que ya lo hemos ejecutado, una, dos, tres veces, etc.
Si no tenemos la instrucción contador = contador + 1, la condición pasada al while dará siempre true 
y caeremos en una repetición infinita, el famoso loop infinito y muy probable que nuestro navegador se cuelgue.

<---------------------------------------------------------------------------------->

2.2 De while para for

Claudia y Armando están casados y ambos son médicos. Sin embargo, siempre estuvieron interesados en la tecnología 
y se inscribieron en Alura para aprender lógica de programación.

Recibieron el siguiente código como tarea:

var contador = 1;
while(contador <= 10) {
    alert("Contador actual: " + contador);
    contador = contador + 1;
}

Necesitan convertirlo para usar la instrucción for.

¿Cuál de las siguientes opciones realiza esta conversión correctamente?

opciones a. 

for( var contador = 1; contador <= 10; contador = contador + 1 ) {
    alert("Contador actual: " + contador);
}

¡Correcto! 
La declaración for se divide en tres partes que están separadas por un punto y coma. 
La primera se usa para declarar la variable que usaremos como contador, 
la segunda para la condición de repetición y 
la última para el incremento de la variable contador.
De hecho, cuando queremos incrementar uno por uno, podemos usar el incremento posterior:

for( var contador = 1; contador <= 10; contador++ ) {
    alert("Contador actual: " + contador);
}

Ten en cuenta que usamos contador++ en lugar de contador=contador + 1. La primera forma es mucho más ágil.

<---------------------------------------------------------------------------------->

2.3 Interrumpiendo una repetición

No sé si notaste, pero en la última función desarrollada Juego_Adivinación.html hay un pequeño error en el texto del alert.
En vez de mostrar los intentos, debería mostrar la variable contador para visualizar la cantidad de veces que el usuario intentó para acertar el número.
Por lo tanto, nuestra función final debería quedar así:

<h1>PROGRAMA JUEGO DE ADIVINACION </h1>
<script>
    function saltarLinea() {
        document.write("<br>");    
        document.write("<br>");    
        document.write("<br>");    
    }  
    function imprimir(frase) {
        document.write(frase);
        saltarLinea();
    }
    var numeroPensado = Math.round(Math.random()*10);
    var intentos = 3;
    var contador = 1;

    while (contador <= intentos) {
        var numeroLanzado = parseInt(prompt("Ingrese un número entre 0-10"));
        if (numeroPensado == numeroLanzado){
            //corregir aquí
            alert("usted acertó, en el intento " + contador + " el número pensado era " + numeroPensado);
            break;
        }
        else {
            alert("usted erró");
        }
        contador++;
    }
    if (numeroPensado == numeroLanzado){
        //corregir aquí
        imprimir("usted acertó, en el intento " + contador + " el número pensado era " + numeroPensado);
    }
    else {
        imprimir("usted erró, el número pensado era " + numeroPensado);
    }
    imprimir("fin");
</script> 

<---------------------------------------------------------------------------------->

2.4 El programa que no para de preguntar

Observa el siguiente código:

<meta charset="UTF-8">

<script>

    function saltarLinea() {
        document.write("<br>");
    }

    function imprimir(frase) {
        document.write(frase);
        saltarLinea();
    }

    var respuesta = ""; // todavía no hay respuesta

    while(true) {
        respuesta = prompt("¿Cuál es tu nombre?");
    }

    imprimir("FIN");

</script>

Ten en cuenta que while() recibe el valor fijo true. Mientras el valor entre paréntesis sea true, repetirá la declaración dentro del bloque {}.
¿Cuál de las siguientes opciones tiene la versión correcta del código while(), 
donde en caso de que la respuesta del usuario sea "SALIR", el programa va a terminar, y por lo tanto, dejar de preguntar el nombre del usuario?

<meta charset="UTF-8">

<script>

    // función saltarLinea e imprimir omitidos

    var respuesta = ""; // todavía no hay respuesta 

    while(true) {
        respuesta = prompt("¿Cuál es tu nombre?");
        if( respuesta == "SALIR") {
            break;
        }
    }

    imprimir("FIN");

</script>

¡Correcto! 
Mientras la respuesta no sea SALIR, seguirá preguntando su nombre.

<---------------------------------------------------------------------------------->

Lo que aprendimos

Repetir tareas y actividades con iteraciones while.
Repetir tareas y actividades con iteraciones for.
Interrumpir iteraciones con break.
Realizar iteraciones anidadas, un loop dentro de otro.